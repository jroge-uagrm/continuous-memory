/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package memoria;

import javax.swing.JOptionPane;

/**
 *
 * @author PC
 */
public class memoriaForm extends javax.swing.JFrame {

    /**
     * Creates new form memoriaForm
     */
    Memoria M;
    boolean vectorDeProcesos[];
    int cantidadDeProcesos;
    public memoriaForm() {
        initComponents();
        nuevaMemoria();
        getContentPane().setBackground(new java.awt.Color(153, 150, 80));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        memoriaTxt = new javax.swing.JTextArea();
        memAvailTxt = new javax.swing.JLabel();
        maxAvailTxt = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        bf = new javax.swing.JRadioButton();
        ff = new javax.swing.JRadioButton();
        tama単oUltProc = new javax.swing.JLabel();
        direccionUltProc = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        listaTxt = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        memoriaTxt.setEditable(false);
        memoriaTxt.setBackground(new java.awt.Color(255, 255, 153));
        memoriaTxt.setColumns(20);
        memoriaTxt.setRows(5);
        memoriaTxt.setAutoscrolls(false);
        memoriaTxt.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        memoriaTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        memoriaTxt.setFocusable(false);
        jScrollPane1.setViewportView(memoriaTxt);

        memAvailTxt.setFont(new java.awt.Font("Courier New", 1, 25)); // NOI18N
        memAvailTxt.setForeground(new java.awt.Color(255, 255, 150));

        maxAvailTxt.setFont(new java.awt.Font("Courier New", 1, 25)); // NOI18N
        maxAvailTxt.setForeground(new java.awt.Color(255, 255, 150));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Courier New", 1, 25)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 150));
        jButton1.setText("FREEMEM");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Courier New", 1, 25)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 150));
        jButton2.setText("GETMEM");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(bf);
        bf.setFont(new java.awt.Font("Courier New", 1, 30)); // NOI18N
        bf.setForeground(new java.awt.Color(255, 255, 150));
        bf.setText("BF");

        buttonGroup1.add(ff);
        ff.setFont(new java.awt.Font("Courier New", 1, 30)); // NOI18N
        ff.setForeground(new java.awt.Color(255, 255, 150));
        ff.setText("FF");
        ff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ffActionPerformed(evt);
            }
        });

        tama単oUltProc.setFont(new java.awt.Font("Courier New", 1, 20)); // NOI18N
        tama単oUltProc.setForeground(new java.awt.Color(255, 255, 150));

        direccionUltProc.setFont(new java.awt.Font("Courier New", 1, 20)); // NOI18N
        direccionUltProc.setForeground(new java.awt.Color(255, 255, 150));

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Courier New", 1, 20)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 150));
        jButton3.setText("<html><body>Nueva<br>Memoria</body></html>");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        listaTxt.setFont(new java.awt.Font("Courier New", 1, 20)); // NOI18N
        listaTxt.setForeground(new java.awt.Color(255, 255, 150));

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 50)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText(" MEMORIA CONTIGUA");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tama単oUltProc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(direccionUltProc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(maxAvailTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(182, 182, 182)
                                .addComponent(ff)
                                .addGap(48, 48, 48)
                                .addComponent(bf)))
                        .addGap(21, 21, 21)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(memAvailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(listaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 646, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(listaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(memAvailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(maxAvailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ff, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bf, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(direccionUltProc, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tama単oUltProc, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ffActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_ffActionPerformed


//******************BOTON GET MEM*********************
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try{
            int tama単oNuevoProceso=Integer.parseInt(JOptionPane.
                    showInputDialog("Ingresar tama単o del nuevo Proceso"));
                if(tama単oNuevoProceso==0){
                    JOptionPane.showMessageDialog(rootPane,"Proceso vacio, NO SE INSERTA");
                }else{
                    cantidadDeProcesos++;
                    vectorDeProcesos[cantidadDeProcesos]=true;
                    String nombreProceso="P"+Integer.toString(cantidadDeProcesos);
                    if(ff.isSelected()){
                        int dirProceso=M.getMemFF(nombreProceso,tama単oNuevoProceso);
                        if(dirProceso==-1){
                            JOptionPane.showMessageDialog(rootPane,
                                    "Demasiado GRANDE para la RAM");
                        }else{
                            actualizar();
                            direccionUltProc.setText("Direccion Ultimo Proceso subido : "+
                                    Integer.toString(dirProceso));
                            tama単oUltProc.setText("Tama単o Ultimo Proceso subido : "+
                                    Integer.toString(tama単oNuevoProceso)+" bytes");
                        }
                    }else{
                        int dirProceso=M.getMemBF(nombreProceso,tama単oNuevoProceso);
                        if(dirProceso==-1){
                            JOptionPane.showMessageDialog(rootPane,
                                    "Demasiado GRANDE para la RAM");
                        }else{
                            actualizar();
                            direccionUltProc.setText("Direccion Ultimo Proceso subido : "+
                                    Integer.toString(dirProceso));
                            tama単oUltProc.setText("Tama単o Ultimo Proceso subido : "+
                                    Integer.toString(tama単oNuevoProceso)+" bytes");
                        }
                    }
                }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(rootPane,"ERROR dato incorrecto");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    
//******************BOTON FREE MEM*********************
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            int numeroProceso=Integer.parseInt((String)JOptionPane.
                    showInputDialog("Ingresar el NUMERO del Proceso para finalizar :"));
            if(!vectorDeProcesos[numeroProceso]){
                JOptionPane.showMessageDialog(rootPane,"Proceso no existe");
            }else{
                vectorDeProcesos[numeroProceso]=false;
                int dirProceso[]=M.freeMem(numeroProceso);
                actualizar();
                tama単oUltProc.setText("Direccion Ultimo Proceso eliminado : "+
                    Integer.toString(dirProceso[0]));
                direccionUltProc.setText("Tama単o Ultimo Proceso eliminado : "+
                    Integer.toString(dirProceso[1])+" bytes");
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(rootPane,"ERROR dato incorrecto");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        nuevaMemoria();
        direccionUltProc.setText("");
        tama単oUltProc.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    
//******************ACTUALIZAR*********************    
    private void actualizar(){actualizarPorArea();}
    private void actualizarPorProceso(){
        memoriaTxt.setText(M.memoriaToStr());
        listaTxt.setText(M.listaProcesoToStr());        
        memAvailTxt.setText("memAvail : "+Integer.toString(M.memAvail())+" bytes");
        maxAvailTxt.setText("maxAvail : "+Integer.toString(M.maxAvail())+" bytes");
    }
    private void actualizarPorArea(){
        memoriaTxt.setText(M.memoriaToStr());
        listaTxt.setText(M.listaAreaToStr());        
        memAvailTxt.setText(" memAvail : "+Integer.toString(M.memAvail())+" bytes");
        maxAvailTxt.setText(" maxAvail : "+Integer.toString(M.maxAvail())+" bytes");
    }
    
    private void nuevaMemoria(){
        boolean correcto = false;
        cantidadDeProcesos=0;
        vectorDeProcesos=new boolean[100];
        for(int i=0;i<100;i++){vectorDeProcesos[i]=false;}
        do {
            try {
                int tama単oNuevaMemoria=Integer.parseInt(JOptionPane.showInputDialog(rootPane, 
                        "Tama単o de la RAM :"));
                M=new Memoria(tama単oNuevaMemoria);
                actualizar();
                ff.setSelected(true);
                correcto=true;
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "ERROR dato incorrecto");
            }

        } while (!correcto);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(memoriaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(memoriaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(memoriaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(memoriaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new memoriaForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton bf;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JLabel direccionUltProc;
    private javax.swing.JRadioButton ff;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel listaTxt;
    private javax.swing.JLabel maxAvailTxt;
    private javax.swing.JLabel memAvailTxt;
    private javax.swing.JTextArea memoriaTxt;
    private javax.swing.JLabel tama単oUltProc;
    // End of variables declaration//GEN-END:variables
}
